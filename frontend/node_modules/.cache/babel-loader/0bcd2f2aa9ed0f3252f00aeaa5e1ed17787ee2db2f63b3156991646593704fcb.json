{"ast":null,"code":"import { REDUX_SET_USERDATA } from \"../actions/actionTypes\";\nimport { put } from \"redux-saga/effects\";\nexport function UserLoginSaga(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    console.log(payload);\n    const {\n      email,\n      password\n    } = payload;\n    let data = yield fetch(\"http://localhost:5000/login\", {\n      method: \"post\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    data = yield data.json();\n    yield put({\n      type: REDUX_SET_USERDATA,\n      data\n    });\n  }();\n}\n_c = UserLoginSaga;\nexport function userCheckSaga(_ref2) {\n  let {\n    data\n  } = _ref2;\n  return function* () {\n    let result = yield fetch(\"http://localhost:5000/check\", {\n      method: \"post\",\n      headers: {\n        authorization: `bearer ${JSON.parse(localStorage.getItem('token'))}`\n      }\n    });\n    result = yield result.json();\n    if (result) {\n      let data = localStorage.getItem('user');\n      console.log('saga ici data', data);\n      yield put({\n        type: REDUX_SET_USERDATA,\n        data\n      });\n    }\n  }();\n}\nvar _c;\n$RefreshReg$(_c, \"UserLoginSaga\");","map":{"version":3,"names":["REDUX_SET_USERDATA","put","UserLoginSaga","_ref","payload","console","log","email","password","data","fetch","method","body","JSON","stringify","headers","json","type","_c","userCheckSaga","_ref2","result","authorization","parse","localStorage","getItem","$RefreshReg$"],"sources":["C:/Users/e-ars/Documents/GitHub/apply4jobv11/frontend/src/redux/saga/UserLoginSaga.js"],"sourcesContent":["import { REDUX_SET_USERDATA } from \"../actions/actionTypes\";\r\nimport { put } from \"redux-saga/effects\";\r\n\r\nexport  function* UserLoginSaga({payload})\r\n{    \r\n     console.log(payload)\r\n     const {email,password} = payload;\r\n     let data = yield fetch(\"http://localhost:5000/login\",{\r\n          method: \"post\",\r\n          body: JSON.stringify({email,password}),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n     });\r\n     data = yield data.json();\r\n     yield put({type:REDUX_SET_USERDATA,data});\r\n     \r\n}\r\n\r\nexport function* userCheckSaga({data})\r\n{\r\n     let result = yield fetch(\"http://localhost:5000/check\",{\r\n          method:\"post\",\r\n          headers:{\r\n               authorization:`bearer ${JSON.parse(localStorage.getItem('token'))}`\r\n          }\r\n     })\r\n     result = yield result.json();\r\n     if(result) {\r\n          let data = localStorage.getItem('user')\r\n          console.log('saga ici data', data)\r\n          yield put({type:REDUX_SET_USERDATA, data})\r\n     }\r\n     \r\n}"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,wBAAwB;AAC3D,SAASC,GAAG,QAAQ,oBAAoB;AAExC,OAAQ,SAAUC,aAAaA,CAAAC,IAAA;EAAA,IAAC;IAACC;EAAO,CAAC,GAAAD,IAAA;EAAA,oBACzC;IACKE,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,MAAM;MAACG,KAAK;MAACC;IAAQ,CAAC,GAAGJ,OAAO;IAChC,IAAIK,IAAI,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAC;MAChDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACP,KAAK;QAACC;MAAQ,CAAC,CAAC;MACtCO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACL,CAAC,CAAC;IACFN,IAAI,GAAG,MAAMA,IAAI,CAACO,IAAI,CAAC,CAAC;IACxB,MAAMf,GAAG,CAAC;MAACgB,IAAI,EAACjB,kBAAkB;MAACS;IAAI,CAAC,CAAC;EAE9C,CAAC;AAAA;AAAAS,EAAA,GAdiBhB,aAAa;AAgB/B,OAAO,SAAUiB,aAAaA,CAAAC,KAAA;EAAA,IAAC;IAACX;EAAI,CAAC,GAAAW,KAAA;EAAA,oBACrC;IACK,IAAIC,MAAM,GAAG,MAAMX,KAAK,CAAC,6BAA6B,EAAC;MAClDC,MAAM,EAAC,MAAM;MACbI,OAAO,EAAC;QACHO,aAAa,EAAE,UAAST,IAAI,CAACU,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;MACvE;IACL,CAAC,CAAC;IACFJ,MAAM,GAAG,MAAMA,MAAM,CAACL,IAAI,CAAC,CAAC;IAC5B,IAAGK,MAAM,EAAE;MACN,IAAIZ,IAAI,GAAGe,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;MACvCpB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEG,IAAI,CAAC;MAClC,MAAMR,GAAG,CAAC;QAACgB,IAAI,EAACjB,kBAAkB;QAAES;MAAI,CAAC,CAAC;IAC/C;EAEL,CAAC;AAAA;AAAA,IAAAS,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}