{"ast":null,"code":"import { REDUX_SET_USERDATA } from \"../actions/actionTypes\";\nimport { put } from \"redux-saga/effects\";\nexport function UserLoginSaga(_ref) {\n  let {\n    payload\n  } = _ref;\n  return function* () {\n    console.log(payload);\n    const {\n      email,\n      password\n    } = payload;\n    let data = yield fetch(\"http://localhost:5000/login\", {\n      method: \"post\",\n      body: JSON.stringify({\n        email,\n        password\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    data = yield data.json();\n    console.warn('saga data', data);\n    if (data.result) {\n      yield put({\n        type: REDUX_SET_USERDATA,\n        data\n      });\n    } else {\n      yield put({\n        type: REDUX_SET_USERDATA,\n        data\n      });\n    }\n  }();\n}\n_c = UserLoginSaga;\nexport function* userCheckSaga() {\n  let result = yield fetch(\"http://localhost:5000/check\", {\n    method: \"post\",\n    headers: {\n      authorization: `bearer ${JSON.parse(localStorage.getItem('token'))}`\n    }\n  });\n  result = yield result.json();\n  console.warn('sonuc', result.result);\n  if (result.result) {\n    console.log('true dondu');\n    let user = JSON.parse(localStorage.getItem('user'));\n    let auth = JSON.parse(localStorage.getItem('token'));\n    let data = {\n      user,\n      auth,\n      lifesycle: true\n    };\n    console.warn(\"data is here \", data);\n    yield put({\n      type: REDUX_SET_USERDATA,\n      data\n    });\n  } else {\n    console.warn('girdi');\n    localStorage.setItem('lifesycle', false);\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"UserLoginSaga\");","map":{"version":3,"names":["REDUX_SET_USERDATA","put","UserLoginSaga","_ref","payload","console","log","email","password","data","fetch","method","body","JSON","stringify","headers","json","warn","result","type","_c","userCheckSaga","authorization","parse","localStorage","getItem","user","auth","lifesycle","setItem","$RefreshReg$"],"sources":["C:/Users/e-ars/Documents/GitHub/apply4jobv11/frontend/src/redux/saga/UserLoginSaga.js"],"sourcesContent":["import { REDUX_SET_USERDATA } from \"../actions/actionTypes\";\r\nimport { put } from \"redux-saga/effects\";\r\n\r\nexport  function* UserLoginSaga({payload})\r\n{    \r\n     console.log(payload)\r\n     const {email,password} = payload;\r\n     let data = yield fetch(\"http://localhost:5000/login\",{\r\n          method: \"post\",\r\n          body: JSON.stringify({email,password}),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n     });\r\n     data = yield data.json();\r\n     console.warn('saga data' , data)\r\n     if(data.result){\r\n          yield put({type:REDUX_SET_USERDATA,data});\r\n     }\r\n     else\r\n     {\r\n          yield put({type:REDUX_SET_USERDATA,data});\r\n          \r\n     }\r\n     \r\n     \r\n}\r\n\r\nexport function* userCheckSaga()\r\n{\r\n\r\n     let result = yield fetch(\"http://localhost:5000/check\",{\r\n          method:\"post\",\r\n          headers:{\r\n               authorization:`bearer ${JSON.parse(localStorage.getItem('token'))}`\r\n          }\r\n     })\r\n     result = yield result.json();\r\n     console.warn('sonuc', result.result)\r\n     if(result.result) {\r\n          console.log('true dondu')\r\n          let user =  JSON.parse( localStorage.getItem('user') )\r\n          let auth = JSON.parse(localStorage.getItem('token'));\r\n          let data = {user,auth,lifesycle:true}\r\n          console.warn(\"data is here \" ,data)\r\n          yield put({type:REDUX_SET_USERDATA, data})\r\n     }\r\n     else{\r\n          console.warn('girdi')\r\n          localStorage.setItem('lifesycle',false)\r\n     }\r\n     \r\n}"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,wBAAwB;AAC3D,SAASC,GAAG,QAAQ,oBAAoB;AAExC,OAAQ,SAAUC,aAAaA,CAAAC,IAAA;EAAA,IAAC;IAACC;EAAO,CAAC,GAAAD,IAAA;EAAA,oBACzC;IACKE,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,MAAM;MAACG,KAAK;MAACC;IAAQ,CAAC,GAAGJ,OAAO;IAChC,IAAIK,IAAI,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAC;MAChDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACP,KAAK;QAACC;MAAQ,CAAC,CAAC;MACtCO,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACL,CAAC,CAAC;IACFN,IAAI,GAAG,MAAMA,IAAI,CAACO,IAAI,CAAC,CAAC;IACxBX,OAAO,CAACY,IAAI,CAAC,WAAW,EAAGR,IAAI,CAAC;IAChC,IAAGA,IAAI,CAACS,MAAM,EAAC;MACV,MAAMjB,GAAG,CAAC;QAACkB,IAAI,EAACnB,kBAAkB;QAACS;MAAI,CAAC,CAAC;IAC9C,CAAC,MAED;MACK,MAAMR,GAAG,CAAC;QAACkB,IAAI,EAACnB,kBAAkB;QAACS;MAAI,CAAC,CAAC;IAE9C;EAGL,CAAC;AAAA;AAAAW,EAAA,GAvBiBlB,aAAa;AAyB/B,OAAO,UAAUmB,aAAaA,CAAA,EAC9B;EAEK,IAAIH,MAAM,GAAG,MAAMR,KAAK,CAAC,6BAA6B,EAAC;IAClDC,MAAM,EAAC,MAAM;IACbI,OAAO,EAAC;MACHO,aAAa,EAAE,UAAST,IAAI,CAACU,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;IACvE;EACL,CAAC,CAAC;EACFP,MAAM,GAAG,MAAMA,MAAM,CAACF,IAAI,CAAC,CAAC;EAC5BX,OAAO,CAACY,IAAI,CAAC,OAAO,EAAEC,MAAM,CAACA,MAAM,CAAC;EACpC,IAAGA,MAAM,CAACA,MAAM,EAAE;IACbb,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,IAAIoB,IAAI,GAAIb,IAAI,CAACU,KAAK,CAAEC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAE,CAAC;IACtD,IAAIE,IAAI,GAAGd,IAAI,CAACU,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IACpD,IAAIhB,IAAI,GAAG;MAACiB,IAAI;MAACC,IAAI;MAACC,SAAS,EAAC;IAAI,CAAC;IACrCvB,OAAO,CAACY,IAAI,CAAC,eAAe,EAAER,IAAI,CAAC;IACnC,MAAMR,GAAG,CAAC;MAACkB,IAAI,EAACnB,kBAAkB;MAAES;IAAI,CAAC,CAAC;EAC/C,CAAC,MACG;IACCJ,OAAO,CAACY,IAAI,CAAC,OAAO,CAAC;IACrBO,YAAY,CAACK,OAAO,CAAC,WAAW,EAAC,KAAK,CAAC;EAC5C;AAEL;AAAC,IAAAT,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}