{"ast":null,"code":"import { REDUX_SET_USERDATA } from \"../actions/actionTypes\";\nimport { put } from \"redux-saga/effects\";\nexport function* UserLoginSaga(payload) {\n  console.log(payload);\n  const {\n    email,\n    password\n  } = payload;\n  let data = yield fetch(\"http://localhost:5000/login\", {\n    method: \"post\",\n    body: JSON.stringify({\n      email,\n      password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  data = yield data.json();\n  yield put({\n    type: REDUX_SET_USERDATA,\n    data\n  });\n}\n_c = UserLoginSaga;\nexport function* userCheckSaga(user) {\n  let result = yield fetch(\"http://localhost:5000/check\", {\n    method: \"post\",\n    headers: {\n      authorization: `bearer ${JSON.parse(localStorage.getItem('token'))}`\n    }\n  });\n  result = yield result.json();\n  if (result) {\n    yield put({\n      type: REDUX_SET_USERDATA,\n      user\n    });\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"UserLoginSaga\");","map":{"version":3,"names":["REDUX_SET_USERDATA","put","UserLoginSaga","payload","console","log","email","password","data","fetch","method","body","JSON","stringify","headers","json","type","_c","userCheckSaga","user","result","authorization","parse","localStorage","getItem","$RefreshReg$"],"sources":["C:/Users/e-ars/Documents/GitHub/apply4jobv11/frontend/src/redux/saga/UserLoginSaga.js"],"sourcesContent":["import { REDUX_SET_USERDATA } from \"../actions/actionTypes\";\r\nimport { put } from \"redux-saga/effects\";\r\n\r\nexport  function* UserLoginSaga(payload)\r\n{    \r\n     console.log(payload)\r\n     const {email,password} = payload;\r\n     let data = yield fetch(\"http://localhost:5000/login\",{\r\n          method: \"post\",\r\n          body: JSON.stringify({email,password}),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n     });\r\n     data = yield data.json();\r\n     yield put({type:REDUX_SET_USERDATA,data});\r\n     \r\n}\r\n\r\nexport function* userCheckSaga(user)\r\n{\r\n     let result = yield fetch(\"http://localhost:5000/check\",{\r\n          method:\"post\",\r\n          headers:{\r\n               authorization:`bearer ${JSON.parse(localStorage.getItem('token'))}`\r\n          }\r\n     })\r\n     result = yield result.json();\r\n     if(result) {\r\n          yield put({type:REDUX_SET_USERDATA,user})\r\n     }\r\n     \r\n}"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,wBAAwB;AAC3D,SAASC,GAAG,QAAQ,oBAAoB;AAExC,OAAQ,UAAUC,aAAaA,CAACC,OAAO,EACvC;EACKC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;EACpB,MAAM;IAACG,KAAK;IAACC;EAAQ,CAAC,GAAGJ,OAAO;EAChC,IAAIK,IAAI,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAC;IAChDC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAACP,KAAK;MAACC;IAAQ,CAAC,CAAC;IACtCO,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACL,CAAC,CAAC;EACFN,IAAI,GAAG,MAAMA,IAAI,CAACO,IAAI,CAAC,CAAC;EACxB,MAAMd,GAAG,CAAC;IAACe,IAAI,EAAChB,kBAAkB;IAACQ;EAAI,CAAC,CAAC;AAE9C;AAACS,EAAA,GAdiBf,aAAa;AAgB/B,OAAO,UAAUgB,aAAaA,CAACC,IAAI,EACnC;EACK,IAAIC,MAAM,GAAG,MAAMX,KAAK,CAAC,6BAA6B,EAAC;IAClDC,MAAM,EAAC,MAAM;IACbI,OAAO,EAAC;MACHO,aAAa,EAAE,UAAST,IAAI,CAACU,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAE;IACvE;EACL,CAAC,CAAC;EACFJ,MAAM,GAAG,MAAMA,MAAM,CAACL,IAAI,CAAC,CAAC;EAC5B,IAAGK,MAAM,EAAE;IACN,MAAMnB,GAAG,CAAC;MAACe,IAAI,EAAChB,kBAAkB;MAACmB;IAAI,CAAC,CAAC;EAC9C;AAEL;AAAC,IAAAF,EAAA;AAAAQ,YAAA,CAAAR,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}