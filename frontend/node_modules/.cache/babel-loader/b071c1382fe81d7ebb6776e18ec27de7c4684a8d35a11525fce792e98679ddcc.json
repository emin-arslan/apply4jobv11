{"ast":null,"code":"import { REDUX_SET_USERDATA } from \"../actions/actionTypes\";\nconst INITIAL_STATE = {\n  userData: {}\n};\nexport const UserReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case REDUX_SET_USERDATA:\n      console.log('redux works in case');\n      return {\n        userData: action.data.user\n      };\n    default:\n      return state;\n  }\n};\n_c = UserReducer;\nvar _c;\n$RefreshReg$(_c, \"UserReducer\");","map":{"version":3,"names":["REDUX_SET_USERDATA","INITIAL_STATE","userData","UserReducer","state","arguments","length","undefined","action","type","console","log","data","user","_c","$RefreshReg$"],"sources":["C:/Users/e-ars/Documents/GitHub/apply4jobv11/frontend/src/redux/reducers/UserReducer.js"],"sourcesContent":["import { REDUX_SET_USERDATA } from \"../actions/actionTypes\";\r\n\r\n\r\nconst INITIAL_STATE = {\r\n  userData: {  },\r\n};\r\nexport const UserReducer = (state = INITIAL_STATE, action) => {\r\n\r\n  switch (action.type) {\r\n    case REDUX_SET_USERDATA:\r\n      console.log('redux works in case')\r\n        return { userData : action.data.user }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,wBAAwB;AAG3D,MAAMC,aAAa,GAAG;EACpBC,QAAQ,EAAE,CAAG;AACf,CAAC;AACD,OAAO,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAmC;EAAA,IAAlCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,aAAa;EAAA,IAAEO,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEvD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKT,kBAAkB;MACrBU,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAChC,OAAO;QAAET,QAAQ,EAAGM,MAAM,CAACI,IAAI,CAACC;MAAK,CAAC;IAC1C;MACE,OAAOT,KAAK;EAChB;AACF,CAAC;AAACU,EAAA,GATWX,WAAW;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}